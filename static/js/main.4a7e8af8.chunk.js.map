{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNeet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","e","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","TagManager","initialize","gtmId","App","init","setinit","setIsloggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a7e8af8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCJMfo_CLdgnmih6MDXg8e3gqrhIdUQAbs\",\n    authDomain: \"nwitter-3879c.firebaseapp.com\",\n    projectId: \"nwitter-3879c\",\n    storageBucket: \"nwitter-3879c.appspot.com\",\n    messagingSenderId: \"120995367242\",\n    appId: \"1:120995367242:web:787925c92d5ea248f5d9b3\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n        \n    const onSocialClick = async (event)=>{\n        const {target:{name},\n    }= event;\n    let provider;\n    if(name === 'google'){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }else if (name ==='github'){\n        provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n    }\n    return(\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n        />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n            </div>\n        </div>\n    )\n}\nexport default Auth;","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNeet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async ()=>{\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok){\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () =>{\n        setEditing((prev)=> !prev);\n    };\n    const onSubmit = async (event)=>{\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text:newNeet,\n        });\n        setEditing(false);\n    }\n    const onChange = (event)=>{\n        const {target:{value},\n        }= event;\n        setNewNweet(value);\n    }\n    return(\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input onChange={onChange}\n                        type=\"text\" \n                        placeholder=\"Edit your Nweet\" \n                        value={newNeet} \n                        required \n                        autoFocus\n                        className=\"formInput\"\n                        />\n                        <input \n                            type=\"submit\"\n                            value=\"Update Nweet\"\n                            className=\"formBtn\" \n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                    </>\n                ) : (\n                    <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    { isOwner && (\n                            <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                            </div>\n                        )\n                    }\n                    </>\n                )\n            }\n        </div>\n    )\n};\n\nexport default Nweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n        <img\n          src={attachment}\n          style={{\n            backgroundImage: attachment,\n          }}\n        />\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n          <span>Remove</span>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\nimport {dbService} from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(()=>{\n        dbService.collection('nweets').onSnapshot((snapshot) =>{\n            const nweetArray = snapshot.docs.map((doc) =>({\n                id:doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        })\n    }, []);\n    \n    return(\n        <div className=\"container\">\n        <NweetFactory userObj={userObj} />\n        <div  style={{ marginTop: 30 }}>\n            {nweets.map((nweet) => (\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\n            ))}\n        </div>\n        </div>\n    )\n}\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogoutClick = ()=>{\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async()=>{\n        const nweets = await dbService\n        .collection(\"nweets\")\n        .where(\"creatorId\", \"==\", userObj.uid)\n        .orderBy(\"createAt\")\n        .get();\n        console.log(nweets.docs.map((doc)=>{doc.data()}))\n    }\n    useEffect(()=>{\n        getMyNweets();\n    }, []);\n    const onChange = (e)=>{\n        const {\n            target:{value},\n        }=e;\n        setNewDisplayName(value);\n    }\n    const onSubmit = async (e)=>{\n        e.preventDefault();\n        if(userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({\n                displayName:newDisplayName,\n            });\n            refreshUser();\n        }\n    }\nreturn(\n    <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n            <input \n                type=\"text\" \n                autoFocus\n                placeholder=\"Display name\"\n                onChange={onChange}\n                value={newDisplayName}\n                className=\"formInput\"\n                /> \n            <input\n                type=\"submit\"\n                value=\"Update Profile\"\n                className=\"formBtn\"\n                style={{\n                    marginTop: 10,\n                }} /> \n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\n            Log Out\n        </span>\n    </div>\n    )\n}\nexport default Profile;","\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport {authService} from \"../fbase\";\nimport TagManager from 'react-gtm-module';\n\nconst tagManagerArgs = {\n  gtmId: 'GTM-5Z8926W'\n}\n\nTagManager.initialize(tagManagerArgs);\nfunction App() {\n  const [init, setinit] = useState(false);\n  const [isLoggedIn, setIsloggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsloggedIn(true);\n        setUserObj(user);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args)=> user.updateProfile(args),\n        });\n      }else{\n        setIsloggedIn(false);\n        setUserObj(null);\n      }\n      setinit(true);\n    })\n  },[]);\n  const refreshUser = ()=>{\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args)=> user.updateProfile(args),\n    });\n  }\n  return(\n   <>\n  {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\n  </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}